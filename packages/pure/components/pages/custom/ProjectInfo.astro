---
// src/components/projects/ProjectInfo.astro
import { Image } from 'astro:assets';
// import type { Component } from 'astro'; // To type the Content prop

// Plugin styles (if needed for content, like Katex)
// import 'katex/dist/katex.min.css'

// Import components similar to BlogPost if desired for layout/styling
// import { Hero } from 'astro-pure/components/pages'; // Example if you want a similar hero
// import XMarkIcon from '@/assets/icons/x-mark.svg?raw'; // Use an icon for closing
import type { AstroComponentFactory } from 'astro/runtime/server/index.js';

interface ProjectData {
  id: string;
  title: string;
  description?: string;
  heroImage?: object; // Adjust type based on your image handling
  publishDate?: Date;
  tags?: string[];
  // Add other relevant fields from your collection schema
}

interface Props {
  id: string; // ID for the dialog element
  projectData: ProjectData | null; // Data for the currently displayed project
  Content: AstroComponentFactory | null; // The rendered Markdown content component
}

const { id, projectData, Content } = Astro.props;

// Basic styling - enhance this significantly with Tailwind/CSS
const dialogStyles = `
  fixed inset-0 z-50 m-auto max-h-[90vh] max-w-[90vw] w-[1000px]  /* Adjust width */
  overflow-y-auto rounded-lg border bg-background p-6 shadow-lg backdrop:bg-black/50
  transition-opacity duration-300 ease-in-out opacity-0 translate-y-4
  open:opacity-100 open:translate-y-0
`;

const closeButtonStyles = `
  absolute top-4 right-4 z-10 rounded-full bg-background/50 p-1 text-foreground/70
  hover:bg-muted hover:text-foreground focus:outline-none focus:ring-2 focus:ring-ring
`;
---

<dialog id={id} class:list={[dialogStyles]} aria-labelledby={`${id}-title`} aria-modal="true">
  {projectData && (
    <>
      <button
        type="button"
        class:list={[closeButtonStyles]}
        aria-label="Close project details"
        onclick={`document.getElementById('${id}').close()`}
        set:html={XMarkIcon}
      >
      </button>

      <article class="project-content prose prose-invert max-w-none dark:prose-invert">
        <!-- Optional Hero Section -->
        {projectData.heroImage && (
          <div class="mb-6 -mx-6 -mt-6 overflow-hidden rounded-t-lg">
             {/* Use astro:assets Image component */}
             <Image
               src={projectData.heroImage}
               alt={`Hero image for ${projectData.title}`}
               widths={[400, 800, 1200]}
               sizes="(max-width: 1000px) 90vw, 1000px"
               loading="lazy"
               class="w-full h-auto max-h-[400px] object-cover"
             />
          </div>
        )}

        <h1 id={`${id}-title`} class="mb-4 text-3xl font-bold">{projectData.title}</h1>

        <!-- Rendered Markdown Content -->
        {Content && <Content />}

        <!-- Optional: Add tags, date, links etc. here -->
        {projectData.tags && (
          <div class="mt-6 text-sm text-muted-foreground">
            Tags: {projectData.tags.join(', ')}
          </div>
        )}
         {projectData.publishDate && (
          <div class="mt-1 text-sm text-muted-foreground">
            Published: {projectData.publishDate.toLocaleDateString()}
          </div>
        )}

      </article>
    </>
  )}
  {/* Placeholder while loading or if no project selected */}
  {!projectData && <p>Loading project details...</p>}
</dialog>

<style>
/* Add any additional global or scoped styles if needed */
/* Ensure prose styles are loaded (e.g., via Tailwind Typography plugin) */
.project-content :global(img) {
    /* Example: Style images within the markdown content */
    @apply my-4 rounded shadow;
}

/* Style for the backdrop */
dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(2px);
}
</style>