---
import { cn } from '../../../utils'
import { Icon } from 'astro-icon/components'

type ButtonTag = 'a' | 'button' | 'span' | 'div'

interface Props extends Record<string, unknown> {
  as?: ButtonTag
  class?: string
  title?: string
  href?: string
  buttonStyle?: 'button' | 'pill'
  prependIcon?: string
  appendIcon?: string
  gap?: string
  size?: 'sm' | 'md' | 'lg'
  style?: string | Record<string, string | number>
}

const {
  as = 'a',
  class: className,
  title,
  href,
  buttonStyle = 'button',
  prependIcon,
  appendIcon,
  gap = '0.4rem',
  size = 'md',
  style,
  ...rest
} = Astro.props as Props

const Tag = as as ButtonTag

const sizeClass: Record<NonNullable<Props['size']>, string> = {
  sm: 'text-sm',
  md: 'text-base',
  lg: 'text-lg'
}

const gapStyle = gap ? `gap:${gap};` : ''
let inlineStyle = ''
if (typeof style === 'string') {
  inlineStyle = style
} else if (style && typeof style === 'object') {
  inlineStyle = Object.entries(style)
    .map(([key, value]) => `${key.replace(/([A-Z])/g, '-$1').toLowerCase()}:${value};`)
    .join(' ')
}
const combinedStyle = [gapStyle, inlineStyle].filter(Boolean).join(' ') || undefined

const linkAttributes =
  Tag === 'a' && href
    ? ({ href, 'data-astro-prefetch': true } as const)
    : ({} as const)

const restProps = Object.fromEntries(
  Object.entries(rest).filter(([key]) => !key.startsWith('astro:'))
) as Record<string, unknown>

const hasPrependIcon = Boolean(prependIcon)
const hasAppendIcon = Boolean(appendIcon)
const hasTitle = Boolean(title)
---

<Tag
  class={cn(
    'group inline-flex items-center align-middle underlined-button-mixin',
    buttonStyle === 'pill' && 'rounded-xl px-3 py-1.5',
    sizeClass[size],
    Tag === 'a' && !href ? 'cursor-default' : 'cursor-pointer',
    className
  )}
  style={combinedStyle}
  {...linkAttributes}
  {...restProps}
>
  <slot>
    {hasPrependIcon && (
      <Icon name={prependIcon} class='prepend-icon-mixin h-4 w-4 flex-shrink-0' aria-hidden='true' />
    )}
    {hasTitle && <span class='my-0 flex-shrink-0'>{title}</span>}
    {hasAppendIcon && (
      <Icon name={appendIcon} class='append-icon-mixin h-4 w-4 flex-shrink-0' aria-hidden='true' />
    )}
  </slot>
</Tag>

<style>
  .underlined-button-mixin {
    position: relative;
    padding-bottom: 2px;
    text-decoration: none;
    color: inherit;
  }

  .underlined-button-mixin::before {
    content: '';
    display: block;
    width: 100%;
    height: 1px;
    background-color: hsl(var(--primary) / var(--un-text-opacity, 1));
    position: absolute;
    left: 0;
    bottom: -1px;
    transform-origin: left;
    transform: scaleX(0);
    transition: transform 0.2s linear;
  }

  .underlined-button-mixin:hover::before,
  .underlined-button-mixin:focus::before {
    transform: scaleX(1);
  }
</style>